/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package android.framework;

import android.framework.utilities.ControlPopupMenu;
import android.framework.utilities.MoveWithinFrameStrategy;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.Point;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import org.netbeans.api.visual.action.ActionFactory;
import org.netbeans.api.visual.action.PopupMenuProvider;
import org.netbeans.api.visual.layout.LayoutFactory;
import org.netbeans.api.visual.widget.ComponentWidget;
import org.netbeans.api.visual.widget.LabelWidget;
import org.netbeans.api.visual.widget.Scene;
import org.netbeans.api.visual.widget.Widget;

/**
 * This class manages a single screen which is initially generated as well as generated by adding a button. 
 * 
 * @author shoaib ahmed
 */
public class MobileScreen {
    private JPanel screen;
    private String screenTitle;
    private ComponentWidget widget;
    private Scene mainScene;
    

    /**
     * This is the default constructor, which generates a Mobile Screen on UI.
     * 
     * @param title The title of the Mobile Screen.
     * @param scene The scene in which screen is made.
     */
    public MobileScreen(String title,Scene scene) {
        screen = new JPanel();
        mainScene = scene;
        screenTitle = title;
        widget = new ComponentWidget(mainScene, screen);
        widget.setLayout(LayoutFactory.createVerticalFlowLayout(LayoutFactory.SerialAlignment.CENTER, 10));
    }
    
    /**
     * Sets the size of mobile screen.
     * 
     * @param width Width of the screen.
     * @param height Height of the screen
     */
    public void setScreenSize(int width, int height){
        screen.setPreferredSize(new Dimension(width, height));
        screen.setBorder(BorderFactory.createTitledBorder(screenTitle));
    }
    
    /**
     * Set position of mobile screen.
     * 
     * @param x Value of x-axis.
     * @param y Value of y-axis.
     */
    public void setScreenPosition(int x, int y){
        widget.setPreferredLocation(new Point(x, y));
    }
    
    /**
     * Returns the Component Widget.
     * 
     * @return Component Widget.
     */
    public ComponentWidget getWidget(){
        return widget;
    }
    
    public void addButton(String text, int x, int y){
        Widget w = new LabelWidget(mainScene, text);
        w.setFont(new Font("", 0, 14));
        w.setPreferredLocation(new Point(x, y));
       // w.getActions().addAction(ActionFactory.createMoveAction(new MoveWithinFrameStrategy(widget.getPreferredBounds().getSize(),
       //         widget.getPreferredLocation().getLocation()),
       //         ActionFactory.createDefaultMoveProvider()));
       
       w.getActions().addAction(ActionFactory.createPopupMenuAction(new ControlPopupMenu()));
       w.setBorder(org.netbeans.api.visual.border.BorderFactory.createBevelBorder(true));
        widget.addChild(w);
    }
    
    
    
}
